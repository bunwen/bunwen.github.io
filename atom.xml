<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>bunwen的博客</title>
  
  <subtitle>顿顿顿</subtitle>
  <link href="https://bunwen.github.io/atom.xml" rel="self"/>
  
  <link href="https://bunwen.github.io/"/>
  <updated>2020-12-07T07:09:40.000Z</updated>
  <id>https://bunwen.github.io/</id>
  
  <author>
    <name>Bunwen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>iOS PushViewController 时使用返回手势页面卡死的问题</title>
    <link href="https://bunwen.github.io/2020/12/07/2020_12_7/"/>
    <id>https://bunwen.github.io/2020/12/07/2020_12_7/</id>
    <published>2020-12-07T06:20:57.000Z</published>
    <updated>2020-12-07T07:09:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>记录遇到的一个神奇BUG、以及它的解决办法</p><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>如果当前的ViewController是Navgation的rootViewController的情况下，点击Push到另一个页面时候，立即左滑返回，页面会卡死、并且会发生一些诡异的事情</p><ul><li>有时Tabbar会消失、在这个阶段ViewController还没有被Push出来 继续使用左滑返回手势的话，页面会从右边慢慢滑出来</li><li>有时ViewController确实被push出来显示在界面上了、但是啥都点不了了。界面卡死、但是并没有发生崩溃、或者内存、CPU占用异常的情况</li></ul><p>这个时候进入视图层级会发现在页面的最上层，有一个叫做 _UIParallaxDimmingView 的视图挡在了Window上，拦截掉了你所有的点击事件</p><p><img src="media/Code/iOS/2020/12_7/001.jpg" alt="层级展示"></p><p>这个 _UIParallaxDimmingView 是一个私有类、我找了一通并没有发现相关的文档说明它具体是个什么东西，只能从名称上来猜测这是控制Push和Pop时左侧的渐渐暗度变化的一个东西 那么我们遇到的问题估计就是下面的这个过程：</p><ul><li>当页面开始push后navgation会启用_UIParallaxDimmingView作为临时页面过渡动画、这时navigation的左滑已经启用，立即返回后_UIParallaxDimmingView会来不及删除，导致它留在页面上卡死了所有的响应</li></ul><p>那么知道这个东西大概和返回手势有关系过后大概也就知道怎么解决它了</p><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><p>在Navgation的基类或者runtime或者category之类的 总之在Navgation 的delegate 在show到第二个页面时，也就是下面这个代理执行的时候</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- (void)navigationController:(UINavigationController *)navigationController didShowViewController:(UIViewController *)viewController animated:(BOOL)animated;</span><br></pre></td></tr></table></figure><p>检测当前的Controller是否是Navigation的rootViewController 然后动态关闭开启 左滑手势</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- (void)navigationController:(UINavigationController *)navigationController didShowViewController:(UIViewController *)viewController animated:(BOOL)animated &#123;</span><br><span class="line">    if ([self respondsToSelector:@selector(interactivePopGestureRecognizer)]) &#123;</span><br><span class="line">        self.interactivePopGestureRecognizer.enabled &#x3D; self.viewControllers.count &gt; 1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>问题解决</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;记录遇到的一个神奇BUG、以及它的解决办法&lt;/p&gt;
&lt;h1 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;p&gt;如果当前的ViewController是Navgation的roo</summary>
      
    
    
    
    <category term="编程" scheme="https://bunwen.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="iOS" scheme="https://bunwen.github.io/categories/%E7%BC%96%E7%A8%8B/iOS/"/>
    
    
    <category term="iOS" scheme="https://bunwen.github.io/tags/iOS/"/>
    
    <category term="Objective-C" scheme="https://bunwen.github.io/tags/Objective-C/"/>
    
    <category term="UIViewController" scheme="https://bunwen.github.io/tags/UIViewController/"/>
    
    <category term="UINavigationController" scheme="https://bunwen.github.io/tags/UINavigationController/"/>
    
    <category term="BUG" scheme="https://bunwen.github.io/tags/BUG/"/>
    
    <category term="返回手势" scheme="https://bunwen.github.io/tags/%E8%BF%94%E5%9B%9E%E6%89%8B%E5%8A%BF/"/>
    
  </entry>
  
  <entry>
    <title>乐理第一章</title>
    <link href="https://bunwen.github.io/2020/03/26/%E5%85%B3%E7%B3%BB%E5%A4%A7%E5%B0%8F%E8%B0%83/"/>
    <id>https://bunwen.github.io/2020/03/26/%E5%85%B3%E7%B3%BB%E5%A4%A7%E5%B0%8F%E8%B0%83/</id>
    <published>2020-03-26T04:12:57.000Z</published>
    <updated>2020-12-03T07:54:16.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关系大小调"><a href="#关系大小调" class="headerlink" title="关系大小调"></a>关系大小调</h1><h2 id="一、级数"><a href="#一、级数" class="headerlink" title="一、级数"></a>一、级数</h2><p>下面是一个C自然大调，它的每一个音都有一个级数<br><img src="/media/MusicTheory/MusicTheory_chapter_1/1-1.png" alt="C自然大调以及其级数" title="C自然大调以及其级数"><br>分别为 Ⅰ(一级)、Ⅱ(二级)、Ⅲ(三级)、Ⅳ(四级)、Ⅴ(五级)、Ⅵ(六级)、Ⅶ(七级)。</p><p><strong>每一个调都有它的级数、每一个调的调內音的第一个音是它的Ⅰ级、第二个音是它的Ⅱ级，以此类推。</strong></p><a id="more"></a><h2 id="二、属性"><a href="#二、属性" class="headerlink" title="二、属性"></a>二、属性</h2><p>在一个调中，每一级都有它独特的属性<br><img src="/media/MusicTheory/MusicTheory_chapter_1/2-1.png" alt="和弦级数极其属性"><br>在一个调中第一级的属性叫做<strong>主</strong>、第二级叫做<strong>上主</strong>、第三级叫做<strong>中</strong>、第四级叫做<strong>下属</strong>、第五级叫做<strong>属</strong>、第六级叫做<strong>下中</strong>、第七级叫做<strong>导</strong>。</p><p>平常我们经常听到其他编曲大佬说什么<strong>主和弦</strong>、<strong>下属和弦</strong>、<strong>属和弦</strong>，则是以<strong>Ⅰ级</strong>、<strong>Ⅳ级</strong>、<strong>Ⅴ级</strong>去构建的和弦</p><p>以下图为例 <strong>在C自然大调中</strong> 主和弦是 1(do) 3(mi) 5(so)、下属和弦是 4(fa) 6(la) 1(do)、属和弦是 5(so) 7(si) 2(re)</p><p><img src="/media/MusicTheory/MusicTheory_chapter_1/2-2.png" alt="C自然大调中和弦属性"><br>而 <strong>在D自然大调中</strong> 主和弦是 2(re) 4#(fa) 6(la)、下属和弦是 5(so) 7(si) 2(re)、属和弦是 6(la) 1#(do) 3(mi)<br><img src="/media/MusicTheory/MusicTheory_chapter_1/2-3.png" alt="D自然大调中和弦属性"></p><div class="note warning"><p>注意：初学者经常一碰见 5(so) 7(si) 2(re) 就认为是属和弦或者下属和弦。<br>但其实一个和弦是什么和弦需要看它在什么调里。<br>比如在C自然大调中 5(so) 7(si) 2(re) 是属和弦，而在D自然大调中是下属和弦</p></div><h2 id="三、大小调"><a href="#三、大小调" class="headerlink" title="三、大小调"></a>三、大小调</h2><h3 id="3-1-大调"><a href="#3-1-大调" class="headerlink" title="3.1 大调"></a>3.1 大调</h3><p>我们经常说一首歌是什么<strong>C大调</strong>的，<strong>G大调</strong>的，那么什么是大调呢？</p><p><strong>大调就是它们每个调內音之间的的关系是 全全半全全全半 的音阶</strong></p><p>比如C大调的调內音中 1(do) 2(re) 3(mi) 4(fa) 5(so) 6(la) 7(si)</p><p>1和2之间的关系是一个全音关系、2和3之间的关系是一个全音关系、3和4之间呢，是一个半音关系。以此类推啊，那么C大调的调內音之间的关系则分别<strong>全全半全全全半</strong>的关系。注意最后一个7他和下一个1的关系也是一个半音关系。</p><p>像这样音和音之间的关系是<strong>全全半全全全半</strong>的调我们就称他为<strong>大调</strong></p><h3 id="3-2-小调"><a href="#3-2-小调" class="headerlink" title="3.2 小调"></a>3.2 小调</h3><p>有大调那么自然就有小调，那么小调究竟是什么呢？</p><p><strong>小调就是它们每个调內音之间的的关系是 全半全全半全全 的音阶</strong></p><!--**C自然大调** 的调內音分别是 1(do) 2(re) 3(mi) 4(fa) 5(so) 6(la) 7(si)那么对应的--><p>比如 a自然小调<br><strong>a自然小调</strong> 的调內音分别是 6(la) 7(si) 1(do) 2(re) 3(mi) 4(fa) 5(so)<br>它们每个音之间的关系就满足 <strong>全半全全半全全</strong> 的规则</p><p>而像C自然大调和a自然小调这种音符全部相同但是顺序不一样的的调我们称他为：<br><strong>关系大小调</strong></p><p><img src="/media/MusicTheory/MusicTheory_chapter_1/3-2.png" alt="大调小调"></p><p>需要注意的是，<strong>大调的书写方式是大写字母，而小调则是小写字母。</strong><br>比如a自然小调我们就得写成 <strong>a自然小调</strong> 不能写成 <strong>A自然小调</strong></p><div class="note success"><p>总结一下：<br>    这堂课我们学习了什么是<strong>级数</strong>，并且知道了每一级的<strong>属性</strong>是什么<br>    我们还学习了什么是<strong>大调</strong>什么是<strong>小调</strong>，什么是关系大小调<br>    在上一堂课中我们知道了在五线谱中不同大调的谱号。那么现在我们同样知道了他们的关系小调的谱号<br>    <img src="/media/MusicTheory/MusicTheory_chapter_1/end.png" alt="大调小调谱号"></p></div><div class="note info"><p>练习：<br>   1.写出所有大调。<br>   2.写出它们的关系小调。<br>   3.写出所有调的所有属性和弦</p></div>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;关系大小调&quot;&gt;&lt;a href=&quot;#关系大小调&quot; class=&quot;headerlink&quot; title=&quot;关系大小调&quot;&gt;&lt;/a&gt;关系大小调&lt;/h1&gt;&lt;h2 id=&quot;一、级数&quot;&gt;&lt;a href=&quot;#一、级数&quot; class=&quot;headerlink&quot; title=&quot;一、级数&quot;&gt;&lt;/a&gt;一、级数&lt;/h2&gt;&lt;p&gt;下面是一个C自然大调，它的每一个音都有一个级数&lt;br&gt;&lt;img src=&quot;/media/MusicTheory/MusicTheory_chapter_1/1-1.png&quot; alt=&quot;C自然大调以及其级数&quot; title=&quot;C自然大调以及其级数&quot;&gt;&lt;br&gt;分别为 Ⅰ(一级)、Ⅱ(二级)、Ⅲ(三级)、Ⅳ(四级)、Ⅴ(五级)、Ⅵ(六级)、Ⅶ(七级)。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;每一个调都有它的级数、每一个调的调內音的第一个音是它的Ⅰ级、第二个音是它的Ⅱ级，以此类推。&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="乐理" scheme="https://bunwen.github.io/categories/%E4%B9%90%E7%90%86/"/>
    
    
    <category term="乐理" scheme="https://bunwen.github.io/tags/%E4%B9%90%E7%90%86/"/>
    
    <category term="关系大小调" scheme="https://bunwen.github.io/tags/%E5%85%B3%E7%B3%BB%E5%A4%A7%E5%B0%8F%E8%B0%83/"/>
    
    <category term="和弦级数" scheme="https://bunwen.github.io/tags/%E5%92%8C%E5%BC%A6%E7%BA%A7%E6%95%B0/"/>
    
    <category term="和弦属性" scheme="https://bunwen.github.io/tags/%E5%92%8C%E5%BC%A6%E5%B1%9E%E6%80%A7/"/>
    
    <category term="大小调" scheme="https://bunwen.github.io/tags/%E5%A4%A7%E5%B0%8F%E8%B0%83/"/>
    
  </entry>
  
</feed>
